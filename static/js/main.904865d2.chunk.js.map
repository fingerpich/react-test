{"version":3,"sources":["reducers/header.js","reducers/auth.js","utilities/localstorage.js","reducers/posts.js","reducers/albums.js","actions/auth.js","constants/actionTypes.js","constants/constants.js","actions/posts.js","store.js","epics/login.js","epics/posts.js","selectors/auth.js","containers/PrivateRoute.js","selectors/posts.js","components/post.jsx","components/posts.jsx","containers/posts.js","components/login.jsx","containers/login.js","selectors/header.js","components/header.jsx","containers/header.js","actions/header.js","App.js","serviceWorker.js","index.js"],"names":["initialState","user","userFromLocalStorage","window","localStorage","userInfoString","getItem","JSON","parse","getUserFromLocalStorage","isAuthenticated","userInfo","error","signInSuccess","state","from","arguments","length","undefined","history","setItem","stringify","setUserToLocalStorage","setTimeout","push","newState","Object","objectSpread","signInErrored","message","signOut","posts","isFetching","errorFetching","startFetching","fillPostList","list","failedLoading","signInFailed","type","BASE_URL","fetchPostFailed","rootEpic","combineEpics","action$","state$","_ref","getJSON","pipe","ofType","mergeMap","action","email","map","matchUsers","catchError","of","value","auth","id","postList","fetchPostSuccess","rootReducer","combineReducers","header","albums","epicMiddleware","createEpicMiddleware","dependencies","ajax","store","createStore","applyMiddleware","run","isUserAuthenticated","getLoginError","getUserEmail","connect","Component","component","rest","objectWithoutProperties","react_default","a","createElement","Route","assign","render","props","Redirect","to","pathname","location","getPostList","getPostIsLoading","getFailedReason","withStyles","theme","card","maxWidth","margin","spacing","unit","media","height","classes","title","body","Card_default","className","CardContent_default","Typography_default","gutterBottom","variant","CardActions_default","Button_default","size","color","this","fetchPosts","isLoading","LinearProgress_default","post","components_post","key","display","justifyContent","alignItems","flexWrap","textAlign","ownProps","dispatch","userId","PostsComponent","LoginForm","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleCloseSnack","event","reason","setState","openSnack","submitted","handleChange","bind","assertThisInitialized","handleSubmit","inherits","createClass","target","preventDefault","signIn","nextProps","flexCenter","FormControl_default","formControl","InputLabel_default","htmlFor","Input_default","onChange","disabled","button","onClick","CircularProgress_default","progress","Fingerprint_default","Snackbar_default","open","onClose","ContentProps","aria-describedby","autoHideDuration","Error_default","width","position","loginComponent","getMenu","menu","HeaderComponent","toggleDrawer","side","defineProperty","left","signout","_this2","sideList","List_default","text","index","ListItem_default","NavLink","ListItemText_default","primary","Divider_default","root","AppBar_default","Toolbar_default","IconButton_default","menuButton","aria-label","Menu_default","grow","link","activeClassName","activeLink","links","Drawer_default","tabIndex","role","onKeyDown","flexGrow","marginLeft","marginRight","textDecoration","fullList","withRouter","headerComponent","App","BrowserRouter","containers_header","Switch","exact","path","Login","containers_PrivateRoute","Posts","Boolean","hostname","match","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.904865d2.chunk.js","sourcesContent":["const initialState = {\n    user: null\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        default: return state;\n    }\n}","import {SUCCESS_SIGN_IN, FAILED_SIGN_IN, SIGNOUT_USER} from '../constants/actionTypes';\nimport {getUserFromLocalStorage, setUserToLocalStorage} from '../utilities/localstorage'\n\nconst userFromLocalStorage = getUserFromLocalStorage();\nconst initialState = {\n    isAuthenticated: !!userFromLocalStorage,\n    userInfo: userFromLocalStorage || {},\n    error: '',\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SUCCESS_SIGN_IN:\n            return signInSuccess(state, action.userInfo, action.from, action.history);\n        case FAILED_SIGN_IN:\n            return signInErrored(state, action.error);\n        case SIGNOUT_USER:\n            return signOut();\n        default: return state;\n    }\n}\n\nconst signInSuccess = (state, userInfo, from = '/', history) => {\n    setUserToLocalStorage(userInfo);\n    setTimeout(() => {\n        history.push(from);\n    }, 10);\n\n    const newState = {...state};\n    newState.isAuthenticated = true;\n    newState.userInfo = userInfo;\n    return newState;\n};\n\nconst signInErrored = (state, error) => {\n    const newState = {...state};\n    newState.isAuthenticated = false;\n    newState.error = error.message;\n    return newState;\n};\n\nconst signOut = (state) => {\n    const newState = {...state};\n    newState.isAuthenticated = false;\n    newState.error = '';\n    newState.userInfo = {};\n    return newState;\n};","export const getUserFromLocalStorage = () => {\n    if (window.localStorage) {\n        const userInfoString = window.localStorage.getItem('userInfo');\n        if (userInfoString) {\n            const userInfo = JSON.parse(userInfoString);\n            return userInfo;\n        }\n    }\n};\n\nexport const setUserToLocalStorage = (userInfo) => {\n    if (window.localStorage) {\n        window.localStorage.setItem('userInfo', JSON.stringify(userInfo));\n    }\n};","import {REQUEST_FETCH_POSTS, SUCCESS_FETCH_POSTS, FAILED_FETCH_POSTS} from \"../constants/actionTypes\";\n\nconst initialState = {\n    posts: [],\n    isFetching: false,\n    errorFetching: null,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case REQUEST_FETCH_POSTS:\n            return startFetching(state);\n        case SUCCESS_FETCH_POSTS:\n            return fillPostList(state, action.postList);\n        case FAILED_FETCH_POSTS:\n            return failedLoading(state, action.error);\n        default: return state;\n    }\n}\n\nconst startFetching = (state) => {\n    return {...state, isFetching: true, errorFetching: null};\n};\n\nconst fillPostList = (state, list) => {\n    return {...state, posts: list, isFetching: false};\n};\n\nconst failedLoading = (state, error) => {\n    return {...state, errorFetching: error, isFetching: false};\n};\n","const initialState = {\n    posts: [],\n    isFetching: false,\n    errorFetching: null,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        default: return state;\n    }\n}","import {REQUEST_SIGN_IN, SUCCESS_SIGN_IN, FAILED_SIGN_IN} from '../constants/actionTypes';\n\nexport const requestSignIn = (email, from, history) => {\n    return {\n        type: REQUEST_SIGN_IN,\n        email,\n        from,\n        history,\n    }\n};\n\nexport const signInSuccess = (userInfo, from, history) => {\n    return {\n        type: SUCCESS_SIGN_IN,\n        userInfo,\n        from,\n        history,\n    }\n};\n\nexport const signInFailed = (error) => {\n    return {\n        type: FAILED_SIGN_IN,\n        error\n    }\n};\n","export const FETCH_USER_DATA = 'FETCH_USER_DATA';\nexport const SIGNOUT_USER = 'SIGNOUT_USER';\nexport const FETCH_MENU = 'FETCH_MENU';\n\nexport const REQUEST_SIGN_IN = 'REQUEST_SIGN_IN';\nexport const SUCCESS_SIGN_IN = 'SUCCESS_SIGN_IN';\nexport const FAILED_SIGN_IN = 'FAILED_SIGN_IN';\n\nexport const REQUEST_FETCH_POSTS = 'REQUEST_FETCH_POSTS';\nexport const SUCCESS_FETCH_POSTS = 'SUCCESS_FETCH_POSTS';\nexport const FAILED_FETCH_POSTS = 'FAILED_FETCH_POSTS';\n","export const BASE_URL = 'https://jsonplaceholder.typicode.com/';","import {REQUEST_FETCH_POSTS, SUCCESS_FETCH_POSTS, FAILED_FETCH_POSTS} from '../constants/actionTypes';\n\nexport const requestFetchPosts = (userId) => {\n    return {\n        type: REQUEST_FETCH_POSTS,\n        userId,\n    }\n};\n\nexport const fetchPostSuccess = (postList) => {\n    return {\n        type: SUCCESS_FETCH_POSTS,\n        postList,\n    }\n};\n\nexport const fetchPostFailed = (error) => {\n    return {\n        type: FAILED_FETCH_POSTS,\n        error\n    }\n};\n","import { createEpicMiddleware } from 'redux-observable';\nimport { createStore, applyMiddleware } from 'redux';\nimport { combineEpics } from 'redux-observable';\nimport { combineReducers } from 'redux';\nimport { ajax } from 'rxjs/ajax';\n\nimport header from './reducers/header';\nimport auth from './reducers/auth';\nimport posts from './reducers/posts';\nimport albums from './reducers/albums';\n\nimport loginEpic from './epics/login';\nimport postEpic from './epics/posts';\n\nexport const rootEpic = combineEpics(\n  loginEpic, postEpic\n);\n\nexport const rootReducer = combineReducers({\n    header,\n    auth,\n    posts,\n    albums,\n});\n\n\nconst epicMiddleware = createEpicMiddleware({\n    dependencies: { getJSON: ajax.getJSON }\n});\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(epicMiddleware)\n);\n\nepicMiddleware.run(rootEpic);\n\nexport default store;","import {map, catchError, mergeMap} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport { ofType } from 'redux-observable';\n\nimport { REQUEST_SIGN_IN } from '../constants/actionTypes';\nimport { signInSuccess, signInFailed } from '../actions/auth';\nimport {BASE_URL} from '../constants/constants';\n\nexport default (action$,state$, {getJSON}) => action$.pipe(\n    ofType(REQUEST_SIGN_IN),\n    mergeMap((action) =>\n        getJSON(BASE_URL + 'users?email=' + action.email).pipe(\n            map((matchUsers) => {\n                if (matchUsers && matchUsers.length) {\n                    const userInfo = matchUsers[0];\n                    return signInSuccess(userInfo, action.from, action.history);\n                } else {\n                    return signInFailed({message: 'Email is wrong'});\n                }\n            }),\n            catchError((error) => of(signInFailed(error)))\n        )\n    )\n)","import {map, catchError, mergeMap} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport { ofType } from 'redux-observable';\n\nimport { REQUEST_FETCH_POSTS } from '../constants/actionTypes';\nimport { fetchPostSuccess, fetchPostFailed } from '../actions/posts';\nimport {BASE_URL} from '../constants/constants';\n\nexport default (action$, state$, {getJSON}) => action$.pipe(\n  ofType(REQUEST_FETCH_POSTS),\n  mergeMap((action) =>\n    getJSON(BASE_URL + 'posts?userId=' + state$.value.auth.userInfo.id).pipe(\n      map((postList) => {\n          if (postList && postList.length) {\n              return fetchPostSuccess(postList);\n          } else {\n              return fetchPostFailed({message: 'list is empty'});\n          }\n      }),\n      catchError((error) => of(fetchPostFailed(error)))\n    )\n  )\n)","export const isUserAuthenticated = (state) => {\n    return state.auth && state.auth.isAuthenticated;\n};\n\nexport const getLoginError = (state) => {\n    return state.auth.error;\n};\n\nexport const getUserEmail = (state) => {\n    return state.auth && state.auth.userInfo.email;\n};\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport {isUserAuthenticated} from '../selectors/auth';\n\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    isAuthenticated ?\n      <Component {...props} /> :\n      <Redirect to={{pathname:'/login', from: props.location}} />\n  )} />\n);\n\nconst mapStateToProps = state => ({\n    isAuthenticated: isUserAuthenticated(state)\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","export const getPostList = state => state.posts.posts;\nexport const getPostIsLoading = state => state.posts.isFetching;\nexport const getFailedReason = state => state.posts.errorFetching;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { withStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n    card: {\n        maxWidth: 300,\n        margin: theme.spacing.unit\n    },\n    media: {\n        height: 140,\n    },\n});\n\nconst PostCard = ({classes, title, body}) => {\n    return <Card className={classes.card}>\n        <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">{title}</Typography>\n            <Typography component=\"p\">{body}</Typography>\n        </CardContent>\n        <CardActions>\n            <Button size=\"small\" color=\"primary\">\n                Share\n            </Button>\n            <Button size=\"small\" color=\"primary\">\n                Learn More\n            </Button>\n        </CardActions>\n    </Card>\n};\n\nexport default withStyles(styles)(PostCard);","import React, {Component} from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Post from './post';\nimport {withStyles} from \"@material-ui/core\";\n\nconst styles = theme => ({\n    postList: {\n        maxWidth: 1000,\n        margin: 'auto',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'inherit',\n        flexWrap: 'wrap'\n    },\n    title: {\n        textAlign: 'center'\n    },\n    error: {\n        color: 'red'\n    }\n});\n\nclass posts extends Component {\n    componentDidMount() {\n        this.props.fetchPosts();\n    }\n\n    render() {\n        const {classes} = this.props;\n        return <div>\n            <h3 className={classes.title}>POSTS</h3>\n            {this.props.isLoading ?\n              <LinearProgress/>:\n              this.props.error ?\n                <div className={classes.error}>{this.props.error}</div> :\n                <div className={classes.postList}>\n                    {this.props.posts.map((post) => {\n                        return <Post className={classes.post} key={post.id} {...post} />\n                    })}\n                </div>\n\n            }\n        </div>\n    }\n}\n\nexport default withStyles(styles)(posts);","import {connect} from 'react-redux';\n\nimport {getPostList, getPostIsLoading, getFailedReason} from '../selectors/posts';\nimport {requestFetchPosts} from '../actions/posts';\nimport PostsComponent from '../components/posts';\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        posts: getPostList(state),\n        isLoading: getPostIsLoading(state),\n        error: getFailedReason(state),\n    }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        fetchPosts: () => dispatch(requestFetchPosts())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsComponent);","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport Figerprint from '@material-ui/icons/Fingerprint';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        width: '100%'\n    },\n    title: {\n    },\n    card: {\n        width: 300,\n        margin: 'auto'\n    },\n    progress: {\n    },\n    flexCenter: {\n        display: 'flex',\n        position: 'fixed',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n        justifyContent: 'center'\n    }\n});\n\nexport class LoginForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: {\n                email: 'Sincere@april.biz',\n            },\n            submitted: false,\n            openSnack: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        const { user } = this.state;\n        const email = event.target.value;\n        this.setState({user: {...user, email}});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        this.setState({ submitted: true });\n        const { user } = this.state;\n        this.props.signIn(user);\n    }\n    componentWillReceiveProps(nextProps) {\n        if (!!nextProps.error) {\n            this.setState({openSnack: true, submitted: false});\n\n        }\n    }\n    handleCloseSnack = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({ openSnack: false });\n    };\n\n    render() {\n        const {classes} = this.props;\n        return <div className={classes.flexCenter}>\n            <Card className={classes.card}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        Login\n                    </Typography>\n                    <div>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\n                            <Input className={'email'} id=\"component-simple\" value={this.state.user.email} onChange={this.handleChange}/>\n                        </FormControl>\n                    </div>\n                </CardContent>\n                <CardActions>\n                    <Button disabled={this.state.submitted} variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.handleSubmit}>\n                        Login\n                        {this.state.submitted?\n                            <CircularProgress className={classes.progress} />:\n                            <Figerprint/>}\n                    </Button>\n\n                </CardActions>\n            </Card>\n            <Snackbar\n              open={this.state.openSnack}\n              onClose={this.handleCloseSnack.bind(this)}\n              ContentProps={{\n                  'aria-describedby': 'message-id',\n              }}\n              autoHideDuration={3000}\n              message={<span id=\"message-id\"><ErrorIcon/>{this.props.error}</span>}\n            />\n        </div>\n    }\n};\n\nexport default withStyles(styles)(LoginForm);","import {connect} from 'react-redux';\n\nimport {requestSignIn} from '../actions/auth';\nimport {getLoginError} from '../selectors/auth'\nimport loginComponent from '../components/login';\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        error: getLoginError(state)\n    }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        signIn: (user) => dispatch(requestSignIn(user.email, ownProps.from, ownProps.history)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(loginComponent);","export const getMenu = (state) => {\n    return state.header.menu\n};\n\nexport const getUserData = (state) => {\n    return state.header.user\n};\n","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    link: {\n        color: 'white',\n    },\n    activeLink: {\n        color: 'yellow',\n        textDecoration: 'none'\n    },\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n};\n\nclass HeaderComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            left: false\n        };\n        this.signout = this.signout.bind(this);\n    }\n\n    toggleDrawer = (side, open) => () => {\n        this.setState({\n            [side]: open,\n        });\n    };\n    signout() {\n        this.props.signout();\n        setTimeout(() => {\n            this.props.history.push('/');\n        }, 1000);\n    }\n\n    render() {\n        if (!this.props.user) {\n            return null\n        }\n        const {classes} = this.props;\n        const sideList = (\n          <div className={classes.list}>\n              <List>\n                  {['Posts', 'Albums'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <NavLink to={'/'+text}>\n                            <ListItemText primary={text} />\n                        </NavLink>\n                    </ListItem>\n                  ))}\n              </List>\n              <Divider/>\n              <List>\n                  <ListItem button onClick={this.signout}>\n                      <ListItemText primary={'Sign out'} />\n                  </ListItem>\n              </List>\n          </div>\n        );\n        return <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton onClick={this.toggleDrawer('left', true)} className={classes.menuButton} color=\"inherit\"\n                                aria-label=\"Menu\">\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                        {this.props.user}\n                    </Typography>\n                    <div>\n                        <NavLink to='/albums' className={classes.link} activeClassName={classes.activeLink}>\n                            <Button color=\"inherit\">Albums</Button>\n                        </NavLink>\n                        <NavLink to='/posts' className={classes.links} activeClassName={classes.activeLink}>\n                            <Button color=\"inherit\">Posts</Button>\n                        </NavLink>\n                    </div>\n                </Toolbar>\n                <Drawer open={this.state.left} onClose={this.toggleDrawer('left', false)}>\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      onClick={this.toggleDrawer('left', false)}\n                      onKeyDown={this.toggleDrawer('left', false)}\n                    >\n                        {sideList}\n                    </div>\n                </Drawer>\n            </AppBar>\n        </div>\n    }\n};\n\nexport default withStyles(styles)(withRouter(HeaderComponent));","import {connect} from 'react-redux';\n\nimport {getMenu} from '../selectors/header';\nimport {getUserEmail} from '../selectors/auth';\nimport {signoutUser} from '../actions/header';\n\nimport headerComponent from '../components/header';\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        menu: getMenu(state),\n        user: getUserEmail(state),\n    }\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        signout: () => dispatch(signoutUser()),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(headerComponent);","import {FETCH_MENU, FETCH_USER_DATA, SIGNOUT_USER} from '../constants/actionTypes';\n\nexport const fetchMenu = () => {\n    return {\n        type: FETCH_MENU,\n    }\n};\n\nexport const fetchUserData = () => {\n    return {\n        type: FETCH_USER_DATA,\n    }\n};\nexport const signoutUser = () => {\n    return {\n        type: SIGNOUT_USER,\n    }\n};\n","import React, { Component } from 'react';\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport PrivateRoute from './containers/PrivateRoute';\nimport Posts from './containers/posts';\nimport Login from './containers/login';\nimport Header from './containers/header';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n          <div>\n              <Header/>\n              <main>\n                  <Switch>\n                      <Redirect exact path='/' to='/posts' />\n                      <Route exact path=\"/login\" component={Login} />\n                      <PrivateRoute exact path='/posts' component={Posts} />\n                      <Redirect to={'/posts'}/>\n                  </Switch>\n              </main>\n          </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App/>\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}